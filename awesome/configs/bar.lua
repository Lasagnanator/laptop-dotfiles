-- --<< Awesome's libraries
-- -- Standard awesome library
-- local awful = require("awful")
-- local gears = require("gears")
-- local gfs   = gears.filesystem
-- -- Widget and layout library
-- local wibox = require("wibox")
-- -- Theme handling library
--
-- --<< Draw on the screen
-- screen.connect_signal("request::desktop_decoration", function(s)
--     -- Each screen has i own tag table.
--     awful.tag({ "1", "2", "3", "4", "5", "6", "7", "8", "9" }, s, awful.layout.layouts[1])
--
--     -- Create a promptbox for each screen
--     s.mypromptbox = awful.widget.prompt()
--
--     -- Create an imagebox widget which will contain an icon indicating which layout we're using.
--     -- We need one layoutbox per screen.
--     s.mylayoutbox = awful.widget.layoutbox {
--         screen  = s,
--         buttons = {
--             awful.button({ }, 1, function () awful.layout.inc( 1) end),
--             awful.button({ }, 3, function () awful.layout.inc(-1) end),
--             awful.button({ }, 4, function () awful.layout.inc(-1) end),
--             awful.button({ }, 5, function () awful.layout.inc( 1) end),
--         }
--     }
--
--     -- Icons for taglist
--     local unfocus = gears.surface.load_uncached(gfs.get_configuration_dir() .. "pac-ghost.svg")
--     local unfocus_icon = gears.color.recolor_image(unfocus, "#C2CFDB")
--     local empty = gears.surface.load_uncached(gfs.get_configuration_dir() .. "pac-ghost.svg")
--     local empty_icon = gears.color.recolor_image(empty, "#4C6070")
--     local focus = gears.surface.load_uncached(gfs.get_configuration_dir() .. "pacman.svg")
--     local focus_icon = gears.color.recolor_image(focus, "#f76a65")
--
--     local taglist_buttons = {
--         awful.button({ }, 1, function(t) t:view_only() end),
--         awful.button({ modkey }, 1, function(t)
--             if client.focus then
--                 client.focus:move_to_tag(t)
--             end
--         end),
--         awful.button({ }, 3, awful.tag.viewtoggle),
--         awful.button({ modkey }, 3, function(t)
--             if client.focus then
--                 client.focus:toggle_tag(t)
--             end
--         end),
--         -- awful.button({ }, 4, function(t) awful.tag.viewprev(t.screen) end),
--         -- awful.button({ }, 5, function(t) awful.tag.viewnext(t.screen) end),
--     }
--
--     --<< Function to update the tags
--     local update_tags = function(self, c3)
--         local tagicon = self:get_children_by_id("icon_role")[1]
--         if c3.selected then
--             tagicon.image = focus_icon
--         elseif #c3:clients() == 0 then
--             tagicon.image = empty_icon
--         else
--             tagicon.image = unfocus_icon
--         end
--     end
--
--     -- Create a taglist widget
--     s.mytaglist = awful.widget.taglist {
--         screen  = s,
--         filter  = awful.widget.taglist.filter.all,
--         
--         buttons = taglist_buttons,
--     }
--
--     -- Create a tasklist widget
--     s.mytasklist = awful.widget.tasklist {
--         screen  = s,
--         filter  = awful.widget.tasklist.filter.currenttags,
--         buttons = {
--             awful.button({ }, 1, function (c)
--                 c:activate { context = "tasklist", action = "toggle_minimization" }
--             end),
--             awful.button({ }, 3, function() awful.menu.client_list { theme = { width = 250 } } end),
--             awful.button({ }, 4, function() awful.client.focus.byidx(-1) end),
--             awful.button({ }, 5, function() awful.client.focus.byidx( 1) end),
--         }
--     }
--
--     -- Create the wibox
--     s.mywibox = awful.wibar {
--         position = "top",
--         screen   = s,
--         widget   = {
--             layout = wibox.layout.align.horizontal,
--             expand = "none",
--             { -- Left widgets
--                 layout = wibox.layout.fixed.horizontal,
--                 s.mylayoutbox,
--                 mylauncher,
--                 s.mypromptbox,
--             },
--             { -- Middle widget
--                 layout = wibox.layout.align.horizontal,
--                 expand = "none",
--                 s.mytaglist,
--                 -- s.mytasklist,
--             },
--             { -- Right widgets
--                 layout = wibox.layout.fixed.horizontal,
--                 -- mykeyboardlayout,
--                 wibox.widget.systray(),
--                 mytextclock,
--             },
--         }
--     }
-- end)
--
